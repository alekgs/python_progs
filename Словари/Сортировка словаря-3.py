"""
Премия Оскар

Представьте, что мы с вами сами можем решать кому и сколько статуэток Оскара уйдет (Лео бы тогда
давно купался в этих статуэтках) Ваша задача написать программу, которая находит информацию, кто из актеров получил
наибольшее и наименьшее количество статуэток

Входные данные
Программа принимать на вход в первой строке натуральное число n - количество вручаемых сегодня наград.
И затем в n следующих строках вводятся имена актеров - победителей.

Выходные данные Нужно вывести в  отдельных строках имена  актеров  набравших наибольшее и наименьшее количество
статуэток и через запятую их количество.  Гарантируется, что всегда будет только один человек, набравших наибольшее и
наименьшее количество статуэток.

Sample Input:

10
Леонардо Ди Каприо
Джонни Депп
Леонардо Ди Каприо
Леонардо Ди Каприо
Джонни Депп
Мэтт Деймон
Алекс Саяпин
Алекс Саяпин
Алекс Саяпин
Алекс Саяпин

Sample Output:
Леонардо Ди Каприо, 3
Мэтт Деймон, 1

"""
act = {}
for _ in range(int(input())):
    act_name = input()
    act[act_name] = act.get(act_name, 0) + 1

kmax, kmin = max(act, key=act.get), min(act, key=act.get)

# Линейный однопроходной алгоритм, чтобы найти любой ключ, соответствующий максимальному значению в словаре
# (результат в новый словарь пишется):

# final_dict = dict([max(start_dict.items(), key=lambda k_v: k_v[1])])

# Если наибольшее значение может повторяться, то чтобы найти все соответствующие ключи:
# max_value = max(start_dict.values())
# final_dict = {k: v for k, v in start_dict.items() if v == max_value}
# Сортировкой по значению
# ssd = sorted(start_dict, key=start_dict.__getitem__)
# k = ssd[-1]
# {k: start_dict[k]}

print(kmax, act[kmax], sep=', ')
print(kmin, act[kmin], sep=', ')

# act = sorted(act.items(), key=lambda item: -item[1])
# print(f'{act[0][0]}, {act[0][1]}')
# print(f'{act[-1][0]}, {act[-1][1]}')
# [print(f'{k}, {v}') for k, v in sorted(act.items(), key=lambda item: -item[1])]
