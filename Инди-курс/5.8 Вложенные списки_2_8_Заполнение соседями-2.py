"""
Заполнение соседями-2

Дана прямоугольная матрица размером NxM, в которой заполнены значения только в последнем столбце и в последнем ряду.
Все остальные элементы равны нулю и мы считаем их незаполненными.

Ваша задача заполнить каждый пустой элемент путем сложения соседа справа и соседа снизу. Начинать нужно с тех
элементов, у которых оба указанных соседа заполнены (не равны нулю)

Входные данные
Программа сперва принимает в одной строке на вход два числа N и M - количество строк и столбцов в списке,
а затем в N строках записаны элементы списка.

Выходные данные
Вывести заполненную матрицу

Sample Input 1:
4 4
0 0 0 1
0 0 0 1
0 0 0 1
1 1 1 1

Sample Output 1:
20 10 4 1
10 6 3 1
4 3 2 1
1 1 1 1

Sample Input 2:
3 5
0 0 0 0 4
0 0 0 0 2
4 4 2 5 4

Sample Output 2:
50 33 20 11 4
17 13 9 7 2
4 4 2 5 4

Sample Input 3:
4 8
0 0 0 0 0 0 0 5
0 0 0 0 0 0 0 2
0 0 0 0 0 0 0 3
4 3 4 4 4 4 5 3

Sample Output 3:
464 324 215 133 75 37 15 5
140 109 82 58 38 22 10 2
31 27 24 20 16 12 8 3
4 3 4 4 4 4 5 3
"""

nm, *matrix = [list(map(int, n.strip().split())) for n in open(0)]

# for i in range(nm[0] - 2, -1, -1):
#     for j in range(nm[1] - 2, -1, -1):
#         matrix[i][j] = matrix[i + 1][j] + matrix[i][j + 1]

for i in reversed(range(nm[0] - 1)):
    for j in reversed(range(nm[1]-1)):
        matrix[i][j] = matrix[i][j + 1] + matrix[i + 1][j]

# [print(*n) for n in matrix]
[print(*[f'{x:<3}' for x in n]) for n in matrix]
