"""
Сортировка IP-адресов

IP-адрес – уникальный числовой идентификатор устройства в компьютерной сети, работающий по протоколу TCP/IP.
В 44-й версии IP-адрес представляет собой 32-битное число. Адрес записывается в виде четырёх десятичных чисел
(октетов) со значением от 0 до 255, разделённых точками, например, 192.168.1.2

Напишите программу, которая считывает IP-адреса и выводит их в порядке возрастания в соответствии
с десятичным представлением.

Формат входных данных
На вход программе подается число n ≥ 1 – количество IP-адресов. Затем n строк с корректными IP-адресами.

Формат выходных данных
Программа должна вывести IP-адреса в порядке возрастания в соответствии с десятичным представлением.

Примечание 1.
Чтобы перевести IP-адрес 192.168.1.2 в десятичное число мы используем формулу:
192⋅2563+168⋅2562+1⋅2561+2⋅2560=3232235778
192⋅2563+168⋅2562+1⋅2561+2⋅2560=3232235778

Примечание 2. Используйте необязательный аргумент key.
Тестовые данные

Sample Input:
9
128.199.44.24
128.199.201.245
143.198.168.95
172.67.181.62
172.67.222.111
172.67.10.90
45.8.106.59
203.13.32.156
172.67.181.194

Sample Output:
45.8.106.59
128.199.44.24
128.199.201.245
143.198.168.95
172.67.10.90
172.67.181.62
172.67.181.194
172.67.222.111
203.13.32.156


"""
#  решение в одну строчку от Глозмана А.
# https://stepik.org/lesson/507310/step/11?discussion=4041615&thread=solutions&unit=499253

print(*sorted([input() for _ in range(int(input()))], key=lambda x: [*map(int, x.split('.'))]), sep='\n')

# решение от Yaroslav Spichihin
# https://stepik.org/lesson/507310/step/11?discussion=4185162&thread=solutions&unit=499253

# from ipaddress import ip_address as ip
#
# l = [input() for _ in range(int(input()))]
# print(*sorted(l, key=ip), sep='\n')


# а это моя портянка )))))

# ip_addr, ip_addr_sort = [input() for _ in range(int(input()))], []
# for i in ip_addr:
#     ip_digits_sum = sum(v * 256 ** (3 - i) for i, v in enumerate(list(map(int, i.split('.')))))
#     ip_addr_sort.append((i, ip_digits_sum))
#
# [print(ip[0]) for ip in sorted(ip_addr_sort, key=lambda g: (g[1], g[0]))]
