"""
Тимур, Артур и новый курс

Сегодня Тимур ждёт в гости своего друга Артура, чтобы спланировать работу по новому курсу "ООП на Python".
Чтобы подготовиться к встрече, Тимуру необходимо посетить два магазина, расположенных рядом с его домом.
От дома до первого магазина ведёт дорожка длиной d1 метров, а до второго магазина ведёт дорожка длиной d2 метров.
Также существует дорожка, соединяющая два магазина друг с другом, длиной d3 метров.

Напишите программу, которая вычисляет минимальное расстояние, которое потребуется пройти Тимуру, чтобы посетить оба 
магазина и вернуться домой. Тимур всегда стартует из дома. Он должен посетить оба магазина, перемещаясь только по 
имеющимся трём дорожкам, и вернуться назад домой. При этом его совершенно не смутит, если ему придётся посетить один 
и тот же магазин или пройти по одной и той же дорожке более одного раза. Единственная его задача — минимизировать 
суммарное пройденное расстояние.

Формат входных данных
На вход программе подаются 33 натуральных числа d1, d2, d3 — длины дорожек, каждое на отдельной строке:

    d1 — длина дорожки, соединяющая дом Тимура и первый магазин
    d2 — длина дорожки, соединяющая дом Тимура и второй магазин
    d3 — длина дорожки, соединяющая магазины

Формат выходных данных
Программа должна вывести минимальное количество метров, которое придётся пройти Тимуру,
чтобы посетить оба магазина и вернуться домой.

"""


def get_min_distance(d1: int, d2: int, d3: int) -> int:
    """
    Возвращает минимальное количество метров, которое придётся пройти Тимуру,
    чтобы посетить оба магазина и вернуться домой
    """
    s1 = d1 + d2 + d3
    s2 = (d1 + d2) * 2
    s3 = min(d1 * 2, d2 * 2) + d3 * 2
    return min(s1, s2, s3)


# d1, d2, d3 = [int(input()) for _ in range(3)]

# тесты
print(get_min_distance(10, 20, 30))   # 60
print(get_min_distance(10, 10, 45))   # 40
print(get_min_distance(100, 33, 34))  # 134
