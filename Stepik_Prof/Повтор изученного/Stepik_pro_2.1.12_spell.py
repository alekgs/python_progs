"""
Функция spell()

Реализуйте функцию spell(), которая принимает произвольное количество позиционных аргументов-слов и возвращает
словарь, ключи которого — первые буквы слов, а значения — максимальные длины слов на эту букву.

Примечание 1.
Если в функцию не передается ни одного аргумента, функция должна возвращать пустой словарь.
Примечание 2.
Функция должна игнорировать регистр слов, при этом в результирующий словарь должны попасть
именно буквы в нижнем регистре.

Sample Input 1:
words = ['россия', 'Австрия', 'австралия', 'РумыниЯ', 'Украина', 'КИТай', 'УЗБЕКИСТАН']
print(spell(*words))
Sample Output 1:
{'р': 7, 'а': 9, 'у': 10, 'к': 5}
Sample Input 2:
print(spell('Математика', 'История', 'химия', 'биология', 'Информатика'))
Sample Output 2:
{'м': 10, 'и': 11, 'х': 5, 'б': 8}
Sample Input 3:
words = ['fruit', 'football', 'February', 'forest', 'Family']
print(spell(*words))
Sample Output 3:
{'f': 8}

"""

# 1
# def spell(*args):
#     result = {}
#     for word in args:
#         if result.get(word[0].lower(), 0) < len(word):
#             result[word[0].lower()] = len(word)
#     return result


def spell(*args: str) -> dict or None:
    """
    Принимает произвольное количество позиционных аргументов-слов и возвращает словарь,
    ключи которого — первые буквы слов, а значения — максимальные длины слов на эту букву
    """
    d = {}
    if args:
        for w in args:
            d[w[0].lower()] = max(d.get(w[0].lower(), 0), len(w))
    return d


# тесты
words = ['россия', 'Австрия', 'австралия', 'РумыниЯ', 'Украина', 'КИТай', 'УЗБЕКИСТАН']

print(spell(*words))  # {'р': 7, 'а': 9, 'у': 10, 'к': 5}
print(spell('Математика', 'История', 'химия', 'биология', 'Информатика'))  # {'м': 10, 'и': 11, 'х': 5, 'б': 8}

words = ['fruit', 'football', 'February', 'forest', 'Family']
print(spell(*words))  # {'f': 8}
