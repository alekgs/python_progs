"""
Бассейны

Тимур планирует пойти в бассейн. Среди всех бассейнов ему подходят те, которые открыты в понедельник в период с 10:00
до 12:00. Также ему нравится плавать по длинным дорожкам, поэтому из всех работающих в это время бассейнов нужно
выбрать бассейн с наибольшей длиной дорожки, при равных значениях — c наибольшей шириной.

Вам доступен файл pools.json, содержащий список JSON-объектов, которые представляют данные о крытых плавательных
бассейнах:

[
   {
      "ObjectName": "Физкультурно-оздоровительный комплекс с бассейном «ГБУ «СШОР № 82» Москомспорта»",
      "AdmArea": "Северо-Восточный административный округ",
      "District": "Алтуфьевский район",
      "Address": "Инженерная улица, дом 5, корпус 1",
      "WorkingHoursSummer": {
         "Понедельник": "10:00-11:00",
         "Вторник": "10:00-11:00",
         "Среда": "10:00-11:00",
         "Четверг": "10:00-11:00",
         "Пятница": "10:00-11:00",
         "Суббота": "10:00-11:00",
         "Воскресенье": "09:00-15:00",
      },
      "DimensionsSummer": {
         "Square": 350,
         "Length": 25,
         "Width": 14,
         "Depth": 1.8
      }
   },
   ...
]

Под «бассейном» будем подразумевать один JSON-объект из этого списка.
У бассейна имеются следующие атрибуты:

    ObjectName — название, будь то фитнес клуб или спортивный комплекс
    AdmArea — административный округ
    District — название района
    Address — адрес
    WorkingHoursSummer — график работы, время начала и закрытия указываются в формате HH:MM
    DimensionsSummer — размеры бассейна, где Square — площадь, Length — длина, Width — ширина, Depth — глубина

Напишите программу, которая определяет бассейн, подходящий Тимуру.
Программа должна вывести его размеры и адрес в следующем формате:

<длина>x<ширина>
<адрес>

Примечание 1. Пример вывода:

25x16
Писцовая улица, дом 12, строение 1

Примечание 2. Бассейн должен быть открыт во время всего периода с 10:00 до 12:00. Например, если бассейн работает в
10:00, но не работает в 11:30, он не подходит.
"""

import json
# from datetime import time

with open('pools.json', encoding='utf-8') as f_in:

    c = "x['WorkingHoursSummer']['Понедельник'][0:5] == '10:00' " \
        "and int(x['WorkingHoursSummer']['Понедельник'][6:8]) >= 12"

    res = filter(lambda x: eval(c), json.load(f_in))

    # d, t1, t2, result = 'Понедельник', time(10), time(12), []
    # for s in json.load(f_in):
    #     if s['WorkingHoursSummer'][d]:
    #         w_t1, w_t2 = map(lambda t: time(int(t.split(':')[0])), s['WorkingHoursSummer'][d].split('-'))
    #         if t1 >= w_t1 and t2 <= w_t2:
    #             result.append(s)

pool_max_len = max(res, key=lambda x: (x['DimensionsSummer']['Length'], x['DimensionsSummer']['Width']))

length = pool_max_len['DimensionsSummer']['Length']
width = pool_max_len['DimensionsSummer']['Width']

print(f"{length}x{width}\n{pool_max_len['Address']}")
