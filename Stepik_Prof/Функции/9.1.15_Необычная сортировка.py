"""
–ù–µ–æ–±—ã—á–Ω–∞—è —Å–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ üå∂Ô∏è

–î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã. –ù–∞–ø–∏—à–∏—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—É, –∫–æ—Ç–æ—Ä–∞—è —Å–æ—Ä—Ç–∏—Ä—É–µ—Ç —Å–∏–º–≤–æ–ª—ã –≤ —Å—Ç—Ä–æ–∫–µ —Å–æ–≥–ª–∞—Å–Ω–æ
—Å–ª–µ–¥—É—é—â–∏–º –ø—Ä–∞–≤–∏–ª–∞–º:

    –≤—Å–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç—Ä–æ—á–Ω—ã–µ –±—É–∫–≤—ã —Å—Ç–æ—è—Ç –ø–µ—Ä–µ–¥ –∑–∞–≥–ª–∞–≤–Ω—ã–º–∏ –±—É–∫–≤–∞–º–∏
    –≤—Å–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã —Å—Ç–æ—è—Ç –ø–µ—Ä–µ–¥ —Ü–∏—Ñ—Ä–∞–º–∏
    –≤—Å–µ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –Ω–µ—á–µ—Ç–Ω—ã–µ —Ü–∏—Ñ—Ä—ã —Å—Ç–æ—è—Ç –ø–µ—Ä–µ–¥ –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ —á–µ—Ç–Ω—ã–º–∏

–§–æ—Ä–º–∞—Ç –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ù–∞ –≤—Ö–æ–¥ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ø–æ–¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è –ª–∞—Ç–∏–Ω—Å–∫–∏–µ –±—É–∫–≤—ã –∏ —Ü–∏—Ñ—Ä—ã.

–§–æ—Ä–º–∞—Ç –≤—ã—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ —Ä–∞—Å–ø–æ–ª–æ–∂–∏—Ç—å —Å–∏–º–≤–æ–ª—ã –≤ —Å—Ç—Ä–æ–∫–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å —É—Å–ª–æ–≤–∏–µ–º –∑–∞–¥–∞—á–∏ –∏ –≤—ã–≤–µ—Å—Ç–∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.
"""

# lower, upper, even, odd = [], [], [], []
#
# for i in list(input()):
#     if i.islower():
#         lower.append(i)
#     elif i.isupper():
#         upper.append(i)
#     elif i.isdigit():
#         if int(i) % 2:
#             odd.append(i)
#         else:
#             even.append(i)
#
# res = ''
# for s in [lower, upper, odd, even]:
#     res += ''.join(sorted(s))
# print(res)

# print(''.join(sorted(input(), key=lambda x: (x in '24680', x.isdigit(), x.isupper(), x))))


# def comparator(char):
#     if char.isalpha():
#         return 0, char.isupper(), char
#     digit = int(char)
#     return 1, not digit % 2, digit
#
#
# print(''.join(sorted(input(), key=comparator)))


from string import ascii_lowercase, ascii_uppercase

sorted_symbols = ascii_lowercase + ascii_uppercase + '13579' + '02468'
print(''.join(sorted(input(), key=sorted_symbols.index)))

# Sample Input 1:
# Sorting1234

# Sample Output 1:
# ginortS1324

# Sample Input 2:
# n0tEast3rEgg

# Sample Output 2:
# aggnrsttEE30

# Sample Input 3:
# 3DYrz34UXl

# Sample Output 3:
# lrzDUXY334


# AnHTqir9brdQrgu5g71uhm1FaJ4fAZjbisIDnJVYekRPdGDc29
# abbcddefgghiijkmnnqrrrsuuAADDFGHIJJPQRTVYZ11579924
# abbcddefgghiijkmnnqrrrsuuAADDFGHIJJPQRTVYZ11579924