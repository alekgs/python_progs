"""
Фёдор поступил в школу с углубленным изучением информатики. Непривычно выглядит система рейтинга в новой школе.
Рейтинг расчитывается, как сумма произведений оценки на "вес" оценки. "Вес" оценки зависит от работы, за которую ее
поставили. Контрольная работа имеет самый большой "вес" - 0.6, за работу на уроке или домашнюю, можно получить оценку
с "весом" 0.4.

Фёдор написал программу, которая помогает ему отслеживать свой учебный рейтинг.

Программа проверяет, правильно ли рассчитана каждая оценка с учетом "веса" и правильно ли рассчитан рейтинг, и,
если присутствуют ошибки, то указывает, где именно. Формат ввода

На первой строке записано количество оценок n и рейтинг.
Далее следует n строк, в каждой из которых записана оценка, "вес" и получившийся результат через пробел.

Сначала записана оценка (по 5-ти бальной системе), затем знак «*», затем "вес" оценки(числа 0.4 или 0.6), затем знак
«=», затем результат (истинная оценка с учетом "веса").

Формат вывода
Нужно вывести разность между указанным вначале рейтингом и истинной суммой оценок по всем строкам.
Далее нужно вывести в порядке возрастания номера всех строк (нумерация с 1), в которых допущена ошибка в расчетах.
Перед нахождением разности, результат суммирования нужно округлить с точностью 1 знака после запятой. Это можно
сделать с помощью функции round(x, 2), где x - округляемая величина или выражение, а цифра 1 - количество знаков
после запятой.

Пример

Ввод
2 1.4
4 * 0.2 = 0.8
3 * 0.2 = 0.6

Вывод
0.0
"""

# Ввод данных

num_scores, rate_scores = input().split()
num_scores, rate_scores = int(num_scores), float(rate_scores)

# формируем список введенных значений
list_scores = []

for i in range(num_scores):
    # разбиваем строку на значения по пробелам
    s = input().split()
    # добавляем в список произведение оценки и веса, и введенное произведение
    list_scores.append([round(float(s[0]) * float(s[2]), 1), float(s[4])])

# счетчик для суммы оценок, список для индексов строк
real_scores, res_real_scores = 0, []

# в цикле по созданному списку list_scores
# используем enumerate (возвращает индекс и значение из итерируемого списка)
for i, v in enumerate(list_scores):
    # если произведение не равно введенному
    if v[0] != v[1]:
        # добавляем индекс в список
        res_real_scores.append(i + 1)
    # суммируем правильное произведение
    real_scores += v[0]

# выводим округленную разность рейтинга и реальных оценок
print(round(rate_scores - round(real_scores, 1), 1))
# выводим номера введенных строк, где найдено неправильное произведение
print(*res_real_scores)
